<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.trip.base.mapper.TravelMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.trip.base.domain.Travel">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="travelTime" jdbcType="DATE" property="travelTime" />
    <result column="perExpends" jdbcType="VARCHAR" property="perExpends" />
    <result column="days" jdbcType="INTEGER" property="days" />
    <result column="person" jdbcType="INTEGER" property="person" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="releaseTime" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="isPublic" jdbcType="BIT" property="isPublic" />
    <result column="coverUrl" jdbcType="VARCHAR" property="coverUrl" />
    <result column="lastUpdateTime" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="content" property="travelContent.content" />
    <association property="region" javaType="Region" columnPrefix="r_">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
    <association property="author" javaType="User" columnPrefix="u_">
      <id column="id" property="id"/>
      <result column="nickName" property="nickName"/>
      <result column="headImgUrl" property="headImgUrl"/>
    </association>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from travel
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.wolfcode.trip.base.domain.Travel" useGeneratedKeys="true">
    insert into travel (title, travelTime, perExpends, 
      days, person, author_id, 
      createTime, releaseTime, isPublic, 
      place_id, coverUrl, lastUpdateTime, 
      state)
    values (#{title,jdbcType=VARCHAR}, #{travelTime,jdbcType=DATE}, #{perExpends,jdbcType=VARCHAR}, 
      #{days,jdbcType=INTEGER}, #{person,jdbcType=INTEGER}, #{author.id,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{releaseTime,jdbcType=TIMESTAMP}, #{isPublic,jdbcType=BIT}, 
      #{region.id,jdbcType=BIGINT}, #{coverUrl,jdbcType=VARCHAR}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.trip.base.domain.Travel">
    update travel
    set title = #{title,jdbcType=VARCHAR},
      travelTime = #{travelTime,jdbcType=DATE},
      perExpends = #{perExpends,jdbcType=VARCHAR},
      days = #{days,jdbcType=INTEGER},
      releaseTime=#{releaseTime},
      person = #{person,jdbcType=INTEGER},
      isPublic = #{isPublic,jdbcType=BIT},
      place_id = #{region.id,jdbcType=BIGINT},
      coverUrl = #{coverUrl,jdbcType=VARCHAR},
      lastUpdateTime = now(),
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="changeState">
    update travel set state = #{state}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select t.id, t.title, t.travelTime, t.perExpends, t.days, t.person, t.createTime, t.releaseTime,
    t.isPublic, t.coverUrl, t.lastUpdateTime, t.state,c.content,
    r.id r_id,r.name r_name,
    u.id u_id,u.nickName u_nickName,u.headImgUrl u_headImgUrl
    from travel t
    left join travelcontent c on c.id = t.id
    left join region r on r.id = t.place_id
    left join user u on u.id = t.author_id
    where t.id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, title, travelTime, perExpends, days, person, author_id, createTime, releaseTime, 
    isPublic, place_id, coverUrl, lastUpdateTime, state
    from travel
  </select>
  <select id="query" resultMap="BaseResultMap">
    select t.id, t.title, t.travelTime, t.perExpends, t.days, t.person, t.createTime, t.releaseTime,
    isPublic,  t.coverUrl, t.lastUpdateTime, t.state,r.id r_id,r.name r_name,
    u.id u_id,u.nickName u_nickName
    from travel t
    left join region r on r.id = t.place_id
    left join user u on u.id = t.author_id
    <where>
      <if test="authorId != null">
        t.author_id = #{authorId}
      </if>
      <if test="state != null">
        and t.state = #{state}
      </if>
      <if test="travelId != null">
        and t.id = #{travelId}
      </if>
    </where>
  </select>
  <select id="travelList" resultMap="BaseResultMap">
    select t.id, t.title, t.travelTime, t.perExpends, t.days, t.person, t.createTime, t.releaseTime,
    isPublic,  t.coverUrl, t.lastUpdateTime, t.state,r.id r_id,r.name r_name,
    u.id u_id,u.nickName u_nickName,u.headImgUrl u_headImgUrl
    from travel t
    left join region r on r.id = t.place_id
    left join user u on u.id = t.author_id
    where t.state = #{state} and t.isPublic = #{isPublic}
  </select>
</mapper>