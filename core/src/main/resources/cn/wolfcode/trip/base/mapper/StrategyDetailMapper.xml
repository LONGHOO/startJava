<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.trip.base.mapper.StrategyDetailMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.trip.base.domain.StrategyDetail">
    <id column="id" property="id" />
    <result column="title" property="title" />
    <result column="createTime" property="createTime" />
    <result column="releaseTime" property="releaseTime" />
    <result column="sequence" property="sequence" />
    <result column="coverUrl" property="coverUrl" />
    <result column="state" property="state" />
    <association property="catalog" javaType="StrategyCatalog" columnPrefix="log_">
      <id column="id" property="id" />
      <result column="name" property="name" />
      <association property="strategy" javaType="Strategy" columnPrefix="st_">
        <id column="id" property="id" />
        <result column="title" property="title" />
      </association>
    </association>
    <association property="strategyContent" select="cn.wolfcode.trip.base.mapper.StrategyContentMapper.getById" column="id"/>
  </resultMap>
  <delete id="deleteByPrimaryKey">
    delete from strategydetail
    where id = #{id}
  </delete>
  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into strategydetail (title,  releaseTime, sequence, catalog_id, coverUrl,
      state)
    values (#{title}, #{releaseTime}, #{sequence}, #{catalog.id}, #{coverUrl},
      #{state})
  </insert>
  <update id="updateByPrimaryKey">
    update strategydetail
    set title = #{title},
      releaseTime = #{releaseTime},
      sequence = #{sequence},
      catalog_id = #{catalog.id},
      coverUrl = #{coverUrl},
      state = #{state}
    where id = #{id}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, title, createTime, releaseTime, sequence, catalog_id, coverUrl, state
    from strategydetail
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, title, createTime, releaseTime, sequence, catalog_id, coverUrl, state
    from strategydetail
  </select>

  <select id="selectByCatalogId" resultMap="BaseResultMap">
    select id, title, createTime, releaseTime, sequence, catalog_id, coverUrl, state
    from strategydetail
    where catalog_id = #{id}
  </select>
  
  <select id="selectForList" resultMap="BaseResultMap">
    select sd.id, sd.title, sd.createTime, sd.releaseTime, sd.sequence, sd.coverUrl,
           sd.state,log.id log_id,log.name log_name,st.id log_st_id,st.title log_st_title
    from strategydetail sd
    left join strategycatalog log on sd.catalog_id = log.id
    left join strategy st on st.id = log.strategy_id
    <where>
      <if test="keyword != null">
        and sd.title like concat('%',#{keyword},'%')
      </if>
    </where>
  </select>

  <select id="getMaxSequenceByCatalogId" resultType="java.lang.Integer">
      select ifnull(max(sequence),0) from strategydetail where catalog_id = #{id}
    </select>
</mapper>