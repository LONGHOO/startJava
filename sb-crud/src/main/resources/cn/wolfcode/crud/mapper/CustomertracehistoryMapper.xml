<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.crud.mapper.CustomertracehistoryMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.crud.domain.Customertracehistory">
    <id column="id" property="id" />
    <result column="trace_time" property="traceTime" />
    <result column="trace_details" property="traceDetails" />
    <result column="trace_result" property="traceResult" />
    <result column="remark" property="remark" />
    <result column="input_time" property="inputTime" />
    <association property="traceType" javaType="cn.wolfcode.crud.domain.Systemdictionaryitem" columnPrefix="type_">
      <id column="id" property="id" />
      <result column="title" property="title" />
    </association>
    <association property="customer" javaType="cn.wolfcode.crud.domain.Customer" columnPrefix="c_">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
    <association property="inputUser" javaType="cn.wolfcode.crud.domain.Employee" columnPrefix="iu_">
      <id column="id" property="id" />
      <result column="name" property="name" />
    </association>
  </resultMap>

  <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into customertracehistory (trace_time, trace_details, trace_type_id, trace_result, remark, 
      customer_id, input_user_id, input_time)
    values (#{traceTime}, #{traceDetails}, #{traceType.id}, #{traceResult}, #{remark},
      #{customer.id}, #{inputUser.id}, #{inputTime})
  </insert>
  <update id="updateByPrimaryKey">
    update customertracehistory
    set trace_time = #{traceTime},
      trace_details = #{traceDetails},
      trace_type_id = #{traceType.id},
      trace_result = #{traceResult},
      remark = #{remark}
    where id = #{id}
  </update>
    <!--resultType="cn.wolfcode.crud.domain.Customertracehistory"-->
  <select id="selectForList" resultMap="BaseResultMap" >
      select his.id,his.trace_time, his.trace_details, his.trace_type_id, his.trace_result, his.remark,
              his.customer_id, his.input_user_id, his.input_time,
              type.id type_id,
              type.title type_title,
              c.id c_id,
              c.name c_name,
              iu.id iu_id,
              iu.name iu_name
      from customertracehistory his
      left join systemdictionaryitem type on his.trace_type_id = type.id
      left join customer c on c.id = his.customer_id
      left join employee iu on iu.id = his.input_user_id
      <where>
          <if test="keyword!=null">
              and (c.name like concat('%',#{keyword},'%') or c.tel like concat('%',#{keyword},'%'))
          </if>
      </where>
  </select>











      <!--input_user_id = #{inputUserId},
      input_time = #{inputTime},-->
  <!--<select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select id, trace_time, trace_details, trace_type_id, trace_result, remark, customer_id, 
    input_user_id, input_time, type
    from customertracehistory
    where id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, trace_time, trace_details, trace_type_id, trace_result, remark, customer_id, 
    input_user_id, input_time, type
    from customertracehistory
  </select>-->

</mapper>